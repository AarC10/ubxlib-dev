# docs at https://docs.zephyrproject.org/latest/reference/kconfig/index.html
CONFIG_DEBUG=y
CONFIG_MINIMAL_LIBC=y
# This is the memory used by the porting layer
CONFIG_HEAP_MEM_POOL_SIZE=32768
# And this is the memory available to malloc()
CONFIG_MINIMAL_LIBC_MALLOC_ARENA_SIZE=98304
CONFIG_USERSPACE=y

CONFIG_UART_INTERRUPT_DRIVEN=y

#Unity requires cpp
CONFIG_CPLUSPLUS=y

#To get uPortTaskStackMinFree() working
CONFIG_INIT_STACKS=y
CONFIG_THREAD_STACK_INFO=y
CONFIG_THREAD_NAME=y

# To be able to test semaphore from ISR
CONFIG_IRQ_OFFLOAD=y
CONFIG_TEST=y

#Sufficient main stack to pass all tests and leave
#5 kbytes slack for user code
CONFIG_MAIN_STACK_SIZE=7048

#Add mbedTLS cryptograpic functions required for u-blox
# SaaS Chip to Chip encryption
CONFIG_MBEDTLS=y
CONFIG_MBEDTLS_BUILTIN=y
# This one for AES CBC 128
CONFIG_MBEDTLS_CIPHER_AES_ENABLED=y
# This one for SHA256
CONFIG_MBEDTLS_MAC_SHA256_ENABLED=y

# Add the basic Zephyr random number generator.
# IMPORTANT: this is only psuedo-random and is unlikely
# to be  sufficient for your needs, please check/test
# if you are intending to build production code.
CONFIG_TEST_RANDOM_GENERATOR=y
CONFIG_ENTROPY_DEVICE_RANDOM_GENERATOR=y

# Make it possible to write and execute from RAM for libCommon
CONFIG_EXECUTE_XOR_WRITE=n

# Don't hide any potential errors
CONFIG_ASSERT=y

# SEGGER RTT logging instead of UART
CONFIG_LOG=y
CONFIG_LOG_DEFAULT_LEVEL=3
#If Log level 4 is set the log stack size needs to be increased
#CONFIG_LOG_PROCESS_THREAD_STACK_SIZE=8096
CONFIG_DEBUG_OPTIMIZATIONS=y
CONFIG_LOG_PRINTK=y
CONFIG_USE_SEGGER_RTT=y
CONFIG_RTT_CONSOLE=y
CONFIG_UART_CONSOLE=n
CONFIG_LOG_BACKEND_RTT=y
CONFIG_LOG_BACKEND_UART=n
# End of SEGGER RTT